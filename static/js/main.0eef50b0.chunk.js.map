{"version":3,"sources":["components/Button.jsx","assets/pizza-logo.svg","components/Header.jsx","components/Categories.jsx","components/SortPopup.jsx","components/PizzaBlock/index.jsx","components/PizzaBlock/LoadingBlock.jsx","redux/actions/filters.js","redux/actions/pizzas.js","redux/actions/cart.js","pages/Home.jsx","components/CartItem.jsx","assets/empty-cart.png","pages/Cart.jsx","App.js","redux/reducers/filters.js","redux/reducers/pizzas.js","redux/reducers/cart.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Button","outline","className","children","onClick","classNames","Header","useSelector","cart","totalPrice","totalCount","to","width","src","logoSvg","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Categories","React","memo","items","onClickCategory","activeCategory","map","item","index","defaultProps","SortPopup","onClickSortType","activeSortType","useState","visiblePopup","setVisiblePopup","activeLabel","find","obj","type","name","sortElem","useRef","useEffect","document","body","addEventListener","handleOutsideClick","e","path","composedPath","includes","current","toggleVisiblePopup","ref","PizzaBlock","imageUrl","price","types","sizes","onClickAddPizza","id","addedCount","availableNames","activeType","setActiveType","activeSize","setActiveSize","active","disabled","onSelectType","size","onSelectSize","isLoading","LoadingBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","Types","fetchPizzas","sortBy","category","dispatch","payload","axios","get","order","then","data","setPizzas","categoryNames","sortItems","Home","pizzas","isLoaded","filters","cartItems","useDispatch","onSelectCategory","useCallback","onSelectSortType","handleAddPizza","pizza","length","Array","_","CartItem","onRemove","onPlus","onMinus","Cart","addedPizzas","Object","keys","key","onRemoveItem","window","confirm","removeCartItem","onPlusCartItem","plusCartItem","onMinusCartItem","minusCartItem","addedPizza","console","log","emptyCartImage","App","exact","component","initialState","state","action","getTotalPrice","arr","reduce","sum","getTotalSum","values","split","firstKey","val","_get","currentPizzaItems","newItems","currentTotalPrice","currentTotalCount","newObjItems","oldObjItems","slice","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0eef50b0.chunk.js","sourcesContent":["import React from 'react'\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({ outline, className, children, onClick }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={classNames('button', className, {\r\n                'button--outline': outline\r\n            })}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n\r\nButton.propTypes = {\r\n    outline: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport logoSvg from '../assets/pizza-logo.svg'\r\nimport { Button } from './'\r\n\r\nconst Header = () => {\r\n    const { totalPrice, totalCount } = useSelector(({ cart }) => cart)\r\n    return (\r\n        <div className='header'>\r\n            <div className='container'>\r\n                <Link to='/'>\r\n                    <div className='header__logo'>\r\n                        <img width='38' src={logoSvg} alt='Pizza logo' />\r\n                        <div>\r\n                            <h1>React Pizza</h1>\r\n                            <p>самая вкусная пицца во вселенной</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                <div className='header__cart'>\r\n                    <Link to='/cart'>\r\n                        <Button className='button--cart'>\r\n                            <span>{totalPrice} ₽</span>\r\n                            <div className='button__delimiter'></div>\r\n                            <svg\r\n                                width='18'\r\n                                height='18'\r\n                                viewBox='0 0 18 18'\r\n                                fill='none'\r\n                                xmlns='http://www.w3.org/2000/svg'>\r\n                                <path\r\n                                    d='M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z'\r\n                                    stroke='white'\r\n                                    strokeWidth='1.8'\r\n                                    strokeLinecap='round'\r\n                                    strokeLinejoin='round'\r\n                                />\r\n                                <path\r\n                                    d='M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z'\r\n                                    stroke='white'\r\n                                    strokeWidth='1.8'\r\n                                    strokeLinecap='round'\r\n                                    strokeLinejoin='round'\r\n                                />\r\n                                <path\r\n                                    d='M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669'\r\n                                    stroke='white'\r\n                                    strokeWidth='1.8'\r\n                                    strokeLinecap='round'\r\n                                    strokeLinejoin='round'\r\n                                />\r\n                            </svg>\r\n                            <span>{totalCount}</span>\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Categories = React.memo(({ items, onClickCategory, activeCategory }) => {\r\n    return (\r\n        <div className='categories'>\r\n            <ul>\r\n                <li\r\n                    className={activeCategory === null ? 'active' : ''}\r\n                    onClick={() => onClickCategory(null)}>\r\n                    Все\r\n                </li>\r\n                {items &&\r\n                    items.map((item, index) => (\r\n                        <li\r\n                            className={activeCategory === index ? 'active' : ''}\r\n                            onClick={() => {\r\n                                onClickCategory(index)\r\n                            }}\r\n                            key={`${item}_${index}`}>\r\n                            {item}\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Categories\r\n\r\nCategories.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.string),\r\n    onClickCategory: PropTypes.func.isRequired,\r\n    activeCategory: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.instanceOf(null)\r\n    ])\r\n}\r\n\r\nCategories.defaultProps = {\r\n    activeCategory: null,\r\n    items: []\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// React.memo следит за изменением пропсов (если они не изменились, то компонент не ререндерится)\r\nconst SortPopup = React.memo(({ items, onClickSortType, activeSortType }) => {\r\n    const [visiblePopup, setVisiblePopup] = useState(false)\r\n    let activeLabel = items.find(obj => obj.type === activeSortType).name\r\n\r\n    const sortElem = useRef()\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick)\r\n    }, [])\r\n\r\n    const handleOutsideClick = e => {\r\n        const path = e.path || (e.composedPath && e.composedPath())\r\n        if (!path.includes(sortElem.current)) {\r\n            setVisiblePopup(false)\r\n        }\r\n    }\r\n\r\n    const onSelectItem = type => {\r\n        onClickSortType(type)\r\n        toggleVisiblePopup()\r\n    }\r\n\r\n    const toggleVisiblePopup = () => {\r\n        setVisiblePopup(!visiblePopup)\r\n    }\r\n\r\n    return (\r\n        <div className='sort' ref={sortElem}>\r\n            <div className='sort__label'>\r\n                <svg\r\n                    className={!visiblePopup ? 'rotate' : ''}\r\n                    width='10'\r\n                    height='6'\r\n                    viewBox='0 0 10 6'\r\n                    fill='none'\r\n                    xmlns='http://www.w3.org/2000/svg'>\r\n                    <path\r\n                        d='M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z'\r\n                        fill='#2C2C2C'\r\n                    />\r\n                </svg>\r\n                <b>Сортировка по:</b>\r\n                <span onClick={toggleVisiblePopup}>{activeLabel}</span>\r\n            </div>\r\n            {visiblePopup && (\r\n                <div className='sort__popup'>\r\n                    <ul>\r\n                        {items &&\r\n                            items.map((item, index) => (\r\n                                <li\r\n                                    key={`${item.type}_${index}`}\r\n                                    className={\r\n                                        activeSortType === item.type\r\n                                            ? 'active'\r\n                                            : ''\r\n                                    }\r\n                                    onClick={() => {\r\n                                        onSelectItem(item)\r\n                                    }}>\r\n                                    {item.name}\r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default SortPopup\r\n\r\nSortPopup.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onClickSortType: PropTypes.func.isRequired,\r\n    activeSortType: PropTypes.string.isRequired\r\n}\r\n\r\nSortPopup.defaultProps = {\r\n    items: []\r\n}\r\n","import React, { useState } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport Button from '../Button'\r\n\r\nconst PizzaBlock = ({\r\n    imageUrl,\r\n    name,\r\n    price,\r\n    types,\r\n    sizes,\r\n    onClickAddPizza,\r\n    id,\r\n    addedCount\r\n}) => {\r\n    const availableNames = ['тонкое', 'традиционное']\r\n    const availableSizes = [26, 30, 40]\r\n\r\n    const [activeType, setActiveType] = useState(types[0])\r\n    const [activeSize, setActiveSize] = useState(sizes[0])\r\n\r\n    const onSelectType = index => {\r\n        setActiveType(index)\r\n    }\r\n    const onSelectSize = size => {\r\n        setActiveSize(size)\r\n    }\r\n\r\n    const onAddPizza = () => {\r\n        const obj = {\r\n            id,\r\n            name,\r\n            imageUrl,\r\n            price,\r\n            type: availableNames[activeType],\r\n            size: activeSize\r\n        }\r\n        onClickAddPizza(obj)\r\n    }\r\n\r\n    return (\r\n        <div className='pizza-block'>\r\n            <img className='pizza-block__image' src={imageUrl} alt='Pizza' />\r\n            <h4 className='pizza-block__title'>{name}</h4>\r\n            <div className='pizza-block__selector'>\r\n                <ul>\r\n                    {availableNames.map((type, index) => (\r\n                        <li\r\n                            key={`${type}_${index}`}\r\n                            className={classNames({\r\n                                active: activeType === index,\r\n                                disabled: !types.includes(index)\r\n                            })}\r\n                            onClick={() => onSelectType(index)}>\r\n                            {type}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <ul>\r\n                    {availableSizes.map((size, index) => (\r\n                        <li\r\n                            onClick={() => onSelectSize(size)}\r\n                            className={classNames({\r\n                                active: activeSize === size,\r\n                                disabled: !sizes.includes(size)\r\n                            })}\r\n                            key={`${size}_${index}`}>\r\n                            {size} см.\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className='pizza-block__bottom'>\r\n                <div className='pizza-block__price'>от {price} ₽</div>\r\n                <Button className='button--add' onClick={onAddPizza} outline>\r\n                    <svg\r\n                        width='12'\r\n                        height='12'\r\n                        viewBox='0 0 12 12'\r\n                        fill='none'\r\n                        xmlns='http://www.w3.org/2000/svg'>\r\n                        <path\r\n                            d='M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z'\r\n                            fill='white'\r\n                        />\r\n                    </svg>\r\n                    <span>Добавить</span>\r\n                    {addedCount && <i>{addedCount}</i>}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PizzaBlock\r\n\r\nPizzaBlock.propTypes = {\r\n    imageUrl: PropTypes.string,\r\n    name: PropTypes.string,\r\n    price: PropTypes.number,\r\n    types: PropTypes.arrayOf(PropTypes.number),\r\n    sizes: PropTypes.arrayOf(PropTypes.number),\r\n    onAddPizza: PropTypes.func,\r\n    addedCount: PropTypes.number\r\n}\r\n\r\nPizzaBlock.defaultProps = {\r\n    name: '---',\r\n    price: '0',\r\n    types: [],\r\n    sizes: [],\r\n    isLoading: false\r\n}\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst LoadingBlock = () => {\r\n    return (\r\n        <ContentLoader\r\n            className='pizza-block'\r\n            speed={2}\r\n            width={280}\r\n            height={460}\r\n            viewBox='0 0 280 460'\r\n            backgroundColor='#f3f3f3'\r\n            foregroundColor='#ecebeb'>\r\n            <circle cx='132' cy='142' r='115' />\r\n            <rect x='0' y='273' rx='6' ry='6' width='280' height='26' />\r\n            <rect x='0' y='310' rx='6' ry='6' width='280' height='84' />\r\n            <rect x='0' y='418' rx='6' ry='6' width='91' height='31' />\r\n            <rect x='137' y='408' rx='25' ry='25' width='140' height='46' />\r\n        </ContentLoader>\r\n    )\r\n}\r\n\r\nexport default LoadingBlock\r\n","export const Types = {\r\n    SET_SORT_BY: 'SET_SORT_BY',\r\n    SET_CATEGORY: 'SET_CATEGORY'\r\n}\r\n\r\nexport const setSortBy = obj => ({\r\n    type: Types.SET_SORT_BY,\r\n    payload: obj\r\n})\r\n\r\nexport const setCategory = categoryIndex => ({\r\n    type: Types.SET_CATEGORY,\r\n    payload: categoryIndex\r\n})\r\n","import axios from 'axios'\r\n\r\nexport const Types = {\r\n    SET_LOADED: 'SET_LOADED',\r\n    SET_PIZZAS: 'SET_PIZZAS'\r\n}\r\n\r\nexport const setLoaded = payload => ({ type: Types.SET_LOADED, payload })\r\nexport const fetchPizzas = (sortBy, category) => dispatch => {\r\n    dispatch(setLoaded(false))\r\n    axios\r\n        .get(\r\n            `http://localhost:3000/pizzas?${\r\n                category !== null ? `category=${category}` : ``\r\n            }&_sort=${sortBy.type}&_order=${sortBy.order}`\r\n        )\r\n        .then(({ data }) => {\r\n            dispatch(setPizzas(data))\r\n        })\r\n}\r\n\r\nexport const setPizzas = items => ({\r\n    type: Types.SET_PIZZAS,\r\n    payload: items\r\n})\r\n","export const Types = {\r\n    ADD_PIZZA_CART: 'ADD_PIZZA_CART',\r\n    CLEAR_CART: 'CLEAR_CART',\r\n    REMOVE_CART_ITEM: 'REMOVE_CART_ITEM',\r\n    PLUS_CART_ITEM: 'PLUS_CART_ITEM',\r\n    MINUS_CART_ITEM: 'MINUS_CART_ITEM'\r\n}\r\n\r\nexport const addPizzaToCart = pizzaObj => ({\r\n    type: Types.ADD_PIZZA_CART,\r\n    payload: pizzaObj\r\n})\r\n\r\nexport const clearCart = () => ({\r\n    type: Types.CLEAR_CART\r\n})\r\n\r\nexport const removeCartItem = id => ({\r\n    type: Types.REMOVE_CART_ITEM,\r\n    payload: id\r\n})\r\n\r\nexport const plusCartItem = id => ({\r\n    type: Types.PLUS_CART_ITEM,\r\n    payload: id\r\n})\r\n\r\nexport const minusCartItem = id => ({\r\n    type: Types.MINUS_CART_ITEM,\r\n    payload: id\r\n})\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    Categories,\r\n    SortPopup,\r\n    PizzaBlock,\r\n    PizzaLoadingBlock\r\n} from '../components'\r\nimport PropTypes from 'prop-types'\r\nimport { setCategory, setSortBy } from '../redux/actions/filters'\r\nimport { fetchPizzas } from '../redux/actions/pizzas'\r\nimport { addPizzaToCart } from '../redux/actions/cart'\r\n\r\nconst categoryNames = [\r\n    'Мясные',\r\n    'Вегетарианские',\r\n    'Гриль',\r\n    'Острые',\r\n    'Закрытые'\r\n]\r\n\r\nconst sortItems = [\r\n    { name: 'популярности', type: 'rating', order: 'desc' },\r\n    { name: 'цене', type: 'price', order: 'desc' },\r\n    { name: 'алфавиту', type: 'name', order: 'asc' }\r\n]\r\n\r\nconst Home = () => {\r\n    const pizzas = useSelector(({ pizzas }) => pizzas.items)\r\n    const isLoaded = useSelector(({ pizzas }) => pizzas.isLoaded)\r\n    const { category, sortBy } = useSelector(({ filters }) => filters)\r\n    const cartItems = useSelector(({ cart }) => cart.items)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchPizzas(sortBy, category))\r\n    }, [sortBy, category])\r\n\r\n    // Функция не будет пересоздаваться при ререндере (useCallback)\r\n    const onSelectCategory = React.useCallback(index => {\r\n        dispatch(setCategory(index))\r\n    }, [])\r\n\r\n    const onSelectSortType = React.useCallback(type => {\r\n        dispatch(setSortBy(type))\r\n    }, [])\r\n\r\n    const handleAddPizza = obj => {\r\n        dispatch(addPizzaToCart(obj))\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='content__top'>\r\n                <Categories\r\n                    activeCategory={category}\r\n                    onClickCategory={onSelectCategory}\r\n                    items={categoryNames}\r\n                />\r\n                <SortPopup\r\n                    onClickSortType={onSelectSortType}\r\n                    items={sortItems}\r\n                    activeSortType={sortBy.type}\r\n                />\r\n            </div>\r\n            <h2 className='content__title'>\r\n                {category === null ? 'Все' : categoryNames[category]} пиццы\r\n            </h2>\r\n            <div className='content__items'>\r\n                {isLoaded\r\n                    ? pizzas.map(pizza => (\r\n                          <PizzaBlock\r\n                              addedCount={\r\n                                  cartItems[pizza.id] &&\r\n                                  cartItems[pizza.id].items.length\r\n                              }\r\n                              key={pizza.id}\r\n                              onClickAddPizza={handleAddPizza}\r\n                              {...pizza}\r\n                          />\r\n                      ))\r\n                    : Array(12)\r\n                          .fill(0)\r\n                          .map((_, index) => <PizzaLoadingBlock key={index} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\nHome.propTypes = {\r\n    pizzas: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nHome.defaultProps = {\r\n    pizzas: []\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst CartItem = ({\r\n    name,\r\n    type,\r\n    size,\r\n    imageUrl,\r\n    totalPrice,\r\n    totalCount,\r\n    id,\r\n    onRemove,\r\n    onPlus,\r\n    onMinus\r\n}) => {\r\n    const handleRemoveClick = () => {\r\n        onRemove(id)\r\n    }\r\n\r\n    const handlePlusItem = () => {\r\n        onPlus(id)\r\n    }\r\n\r\n    const handleMinusItem = () => {\r\n        onMinus(id)\r\n    }\r\n    return (\r\n        <div className='cart__item'>\r\n            <div className='cart__item-img'>\r\n                <img\r\n                    className='pizza-block__image'\r\n                    src={imageUrl}\r\n                    alt='Pizza'\r\n                />\r\n            </div>\r\n            <div className='cart__item-info'>\r\n                <h3>{name}</h3>\r\n                <p>\r\n                    {type} тесто, {size} см.\r\n                </p>\r\n            </div>\r\n            <div className='cart__item-count'>\r\n                <Button\r\n                    className='button--circle cart__item-count-minus'\r\n                    outline\r\n                    onClick={handleMinusItem}>\r\n                    <svg\r\n                        width='10'\r\n                        height='10'\r\n                        viewBox='0 0 10 10'\r\n                        fill='none'\r\n                        xmlns='http://www.w3.org/2000/svg'>\r\n                        <path\r\n                            d='M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z'\r\n                            fill='#EB5A1E'\r\n                        />\r\n                        <path\r\n                            d='M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z'\r\n                            fill='#EB5A1E'\r\n                        />\r\n                    </svg>\r\n                </Button>\r\n                <b>{totalCount}</b>\r\n                <Button\r\n                    className='button--circle cart__item-count-plus'\r\n                    outline\r\n                    onClick={handlePlusItem}>\r\n                    <svg\r\n                        width='10'\r\n                        height='10'\r\n                        viewBox='0 0 10 10'\r\n                        fill='none'\r\n                        xmlns='http://www.w3.org/2000/svg'>\r\n                        <path\r\n                            d='M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z'\r\n                            fill='#EB5A1E'\r\n                        />\r\n                        <path\r\n                            d='M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z'\r\n                            fill='#EB5A1E'\r\n                        />\r\n                    </svg>\r\n                </Button>\r\n            </div>\r\n            <div className='cart__item-price'>\r\n                <b>{totalPrice} ₽</b>\r\n            </div>\r\n            <div className='cart__item-remove'>\r\n                <Button\r\n                    className=' button--circle'\r\n                    onClick={handleRemoveClick}\r\n                    outline>\r\n                    <svg\r\n                        width='10'\r\n                        height='10'\r\n                        viewBox='0 0 10 10'\r\n                        fill='none'\r\n                        xmlns='http://www.w3.org/2000/svg'>\r\n                        <path\r\n                            d='M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z'\r\n                            fill='#EB5A1E'\r\n                        />\r\n                        <path\r\n                            d='M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z'\r\n                            fill='#EB5A1E'\r\n                        />\r\n                    </svg>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n\r\nCartItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string.isRequired,\r\n    totalPrice: PropTypes.number.isRequired,\r\n    totalCount: PropTypes.number.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    onRemove: PropTypes.func.isRequired\r\n}\r\n","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import React from 'react'\r\nimport CartItem from '../components/CartItem'\r\nimport emptyCartImage from '../assets/empty-cart.png'\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Button } from '../components'\r\n\r\nimport {\r\n    clearCart,\r\n    removeCartItem,\r\n    plusCartItem,\r\n    minusCartItem\r\n} from '../redux/actions/cart'\r\n\r\nconst Cart = () => {\r\n    const dispatch = useDispatch()\r\n    const { items, totalCount, totalPrice } = useSelector(({ cart }) => cart)\r\n\r\n    const addedPizzas = Object.keys(items).map(key => items[key].items[0])\r\n\r\n    const onClearCart = () => {\r\n        if (window.confirm('Вы действительно хотите очистить корзину?')) {\r\n            dispatch(clearCart())\r\n        }\r\n    }\r\n\r\n    const onRemoveItem = id => {\r\n        if (window.confirm('Вы действительно хотите удалить пиццу?')) {\r\n            dispatch(removeCartItem(id))\r\n        }\r\n    }\r\n\r\n    const onPlusCartItem = id => {\r\n        dispatch(plusCartItem(id))\r\n    }\r\n\r\n    const onMinusCartItem = id => {\r\n        dispatch(minusCartItem(id))\r\n    }\r\n\r\n    const onCLickOrder = () => {\r\n        console.log('ВАШ ЗАКАЗ', items)\r\n    }\r\n\r\n    return (\r\n        <div className='container container--cart'>\r\n            {!totalCount ? (\r\n                <div className='cart cart--empty'>\r\n                    <h2>\r\n                        Корзина пустая <span>😕</span>\r\n                    </h2>\r\n                    <p>\r\n                        Вероятней всего, вы не заказывали ещё пиццу.\r\n                        <br />\r\n                        Для того, чтобы заказать пиццу, перейди на главную\r\n                        страницу.\r\n                    </p>\r\n                    <img src={emptyCartImage} alt='Empty cart' />\r\n                    <Link to='/' className='button button--black'>\r\n                        <span>Вернуться назад</span>\r\n                    </Link>\r\n                </div>\r\n            ) : (\r\n                <div className='cart'>\r\n                    <div className='cart__top'>\r\n                        <h2 className='content__title'>\r\n                            <svg\r\n                                width='18'\r\n                                height='18'\r\n                                viewBox='0 0 18 18'\r\n                                fill='none'\r\n                                xmlns='http://www.w3.org/2000/svg'>\r\n                                <path\r\n                                    d='M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z'\r\n                                    stroke='white'\r\n                                    strokeWidth='1.8'\r\n                                    strokeLinecap='round'\r\n                                    strokeLinejoin='round'\r\n                                />\r\n                                <path\r\n                                    d='M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z'\r\n                                    stroke='white'\r\n                                    strokeWidth='1.8'\r\n                                    strokeLinecap='round'\r\n                                    strokeLinejoin='round'\r\n                                />\r\n                                <path\r\n                                    d='M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669'\r\n                                    stroke='white'\r\n                                    strokeWidth='1.8'\r\n                                    strokeLinecap='round'\r\n                                    strokeLinejoin='round'\r\n                                />\r\n                            </svg>\r\n                            Корзина\r\n                        </h2>\r\n\r\n                        <div className='cart__clear'>\r\n                            <svg\r\n                                width='20'\r\n                                height='20'\r\n                                viewBox='0 0 20 20'\r\n                                fill='none'\r\n                                xmlns='http://www.w3.org/2000/svg'>\r\n                                <path\r\n                                    d='M2.5 5H4.16667H17.5'\r\n                                    stroke='#B6B6B6'\r\n                                    strokeWidth='1.2'\r\n                                    strokeLinecap='round'\r\n                                    strokeLinejoin='round'\r\n                                />\r\n                                <path\r\n                                    d='M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z'\r\n                                    stroke='#B6B6B6'\r\n                                    strokeWidth='1.2'\r\n                                    strokeLinecap='round'\r\n                                    strokeLinejoin='round'\r\n                                />\r\n                                <path\r\n                                    d='M8.33337 9.16667V14.1667'\r\n                                    stroke='#B6B6B6'\r\n                                    strokeWidth='1.2'\r\n                                    strokeLinecap='round'\r\n                                    strokeLinejoin='round'\r\n                                />\r\n                                <path\r\n                                    d='M11.6666 9.16667V14.1667'\r\n                                    stroke='#B6B6B6'\r\n                                    strokeWidth='1.2'\r\n                                    strokeLinecap='round'\r\n                                    strokeLinejoin='round'\r\n                                />\r\n                            </svg>\r\n\r\n                            <span onClick={onClearCart}>Очистить корзину</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='content__items'>\r\n                        {addedPizzas.map(addedPizza => (\r\n                            <CartItem\r\n                                key={addedPizza.id}\r\n                                id={addedPizza.id}\r\n                                name={addedPizza.name}\r\n                                type={addedPizza.type}\r\n                                size={addedPizza.size}\r\n                                imageUrl={addedPizza.imageUrl}\r\n                                totalPrice={items[addedPizza.id].totalPrice}\r\n                                totalCount={items[addedPizza.id].items.length}\r\n                                onRemove={onRemoveItem}\r\n                                onPlus={onPlusCartItem}\r\n                                onMinus={onMinusCartItem}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <div className='cart__bottom'>\r\n                        <div className='cart__bottom-details'>\r\n                            <span>\r\n                                Всего пицц: <b>{totalCount} шт.</b>\r\n                            </span>\r\n                            <span>\r\n                                Сумма заказа: <b>{totalPrice} ₽</b>\r\n                            </span>\r\n                        </div>\r\n                        <div className='cart__bottom-buttons'>\r\n                            <Link\r\n                                to='/'\r\n                                className='button button--outline button--add go-back-btn'>\r\n                                <svg\r\n                                    width='8'\r\n                                    height='14'\r\n                                    viewBox='0 0 8 14'\r\n                                    fill='none'\r\n                                    xmlns='http://www.w3.org/2000/svg'>\r\n                                    <path\r\n                                        d='M7 13L1 6.93015L6.86175 1'\r\n                                        stroke='#D3D3D3'\r\n                                        strokeWidth='1.5'\r\n                                        strokeLinecap='round'\r\n                                        strokeLinejoin='round'\r\n                                    />\r\n                                </svg>\r\n\r\n                                <span>Вернуться назад</span>\r\n                            </Link>\r\n                            <Button className='pay-btn' onClick={onCLickOrder}>\r\n                                <span>Оплатить сейчас</span>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React from 'react'\nimport { Route } from 'react-router'\n\nimport { Header } from './components'\nimport { Home, Cart } from './pages'\n\n\nfunction App() {\n\n    return (\n        <div className='wrapper'>\n            <Header />\n            <div className='content'>\n                <Route exact path='/' component={Home} />\n                <Route path='/cart' component={Cart} />\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import { Types } from '../actions/filters'\r\n\r\nconst initialState = {\r\n    category: null,\r\n    sortBy: {\r\n        type: 'rating',\r\n        order: 'desc'\r\n    }\r\n}\r\n\r\nconst filters = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.SET_SORT_BY:\r\n            return { ...state, sortBy: action.payload }\r\n        case Types.SET_CATEGORY:\r\n            return { ...state, category: action.payload }\r\n\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default filters\r\n","import { Types } from '../actions/pizzas'\r\n\r\nconst initialState = {\r\n    items: [],\r\n    isLoaded: false\r\n}\r\n\r\nconst filters = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.SET_PIZZAS:\r\n            return { ...state, items: action.payload, isLoaded: true }\r\n        case Types.SET_LOADED:\r\n            return { ...state, isLoaded: action.payload }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default filters\r\n","import { Types } from '../actions/cart'\r\n\r\nconst initialState = {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0\r\n}\r\n\r\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0)\r\n\r\n// Аналог функции _.get из библиотеки lodash\r\nconst _get = (obj, path) => {\r\n    const [firstKey, ...keys] = path.split('.')\r\n\r\n    return keys.reduce((val, key) => {\r\n        return val[key]\r\n    }, obj[firstKey])\r\n}\r\n\r\n// Функция подсчета количества товаров в корзине или итоговой суммы\r\nconst getTotalSum = (obj, path) => {\r\n    return Object.values(obj).reduce((sum, obj) => {\r\n        const value = _get(obj, path)\r\n        return sum + value\r\n    }, 0)\r\n}\r\n\r\nconst cart = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.ADD_PIZZA_CART: {\r\n            const currentPizzaItems = !state.items[action.payload.id]\r\n                ? [action.payload]\r\n                : [...state.items[action.payload.id].items, action.payload]\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload.id]: {\r\n                    items: currentPizzaItems,\r\n                    totalPrice: getTotalPrice(currentPizzaItems)\r\n                }\r\n            }\r\n\r\n            const totalCount = getTotalSum(newItems, 'items.length')\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice')\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount,\r\n                totalPrice\r\n            }\r\n        }\r\n\r\n        case Types.REMOVE_CART_ITEM: {\r\n            const newItems = {\r\n                ...state.items\r\n            }\r\n\r\n            const currentTotalPrice = newItems[action.payload].totalPrice\r\n\r\n            const currentTotalCount = newItems[action.payload].items.length\r\n\r\n            delete newItems[action.payload]\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalPrice: state.totalPrice - currentTotalPrice,\r\n                totalCount: state.totalCount - currentTotalCount\r\n            }\r\n        }\r\n\r\n        case Types.PLUS_CART_ITEM: {\r\n            const newObjItems = [\r\n                ...state.items[action.payload].items,\r\n                state.items[action.payload].items[0]\r\n            ]\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items: newObjItems,\r\n                    totalPrice: getTotalPrice(newObjItems)\r\n                }\r\n            }\r\n\r\n            const totalCount = getTotalSum(newItems, 'items.length')\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice')\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount,\r\n                totalPrice\r\n            }\r\n        }\r\n\r\n        case Types.MINUS_CART_ITEM: {\r\n            const oldObjItems = [...state.items[action.payload].items]\r\n\r\n            const newObjItems =\r\n                oldObjItems.length > 1 ? oldObjItems.slice(1) : oldObjItems\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items: newObjItems,\r\n                    totalPrice: getTotalPrice(newObjItems)\r\n                }\r\n            }\r\n\r\n            const totalCount = getTotalSum(newItems, 'items.length')\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice')\r\n\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                totalCount,\r\n                totalPrice\r\n            }\r\n        }\r\n\r\n        case Types.CLEAR_CART:\r\n            return { ...state, items: {}, totalCount: 0, totalPrice: 0 }\r\n\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default cart\r\n","import { combineReducers } from 'redux'\r\n\r\nimport filters from './filters'\r\nimport pizzas from './pizzas'\r\nimport cart from './cart'\r\n\r\nconst rootReducer = combineReducers({\r\n    filters,\r\n    pizzas,\r\n    cart\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './scss/app.scss'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}